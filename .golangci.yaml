version: "2"
run:
  # Run without --fast-only flag for more extensive checks
  go: "1.24"
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exptostd
    - fatcontext
    - forbidigo
    - forcetypeassert
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecksumtype
    - goconst
    - gocritic
    - godot
    - goprintffuncname
    - gosec
    - gosmopolitan
    - govet
    - iface
    - importas
    - ineffassign
    - intrange
    - loggercheck
    - makezero
    - mirror
    - misspell
    - mnd
    - nakedret
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - reassign
    - revive
    - rowserrcheck
    - staticcheck
    - tagliatelle
    - testifylint
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - whitespace
  settings:
    gocritic:
      disabled-checks:
        - appendAssign
        - dupImport # https://github.com/go-critic/go-critic/issues/845
        - evalOrder
        - ifElseChain
        - octalLiteral
        - regexpSimplify
        - sloppyReassign
        - truncateCmp
        - typeDefFirst
        - unnamedResult
        - unnecessaryDefer
        - whyNoLint
        - wrapperFunc
      enabled-tags:
        - experimental
    gosec:
      severity: medium
      confidence: medium
      concurrency: 8
    govet:
      enable:
        - shadow
    importas:
      alias:
        # Kubernetes
        - pkg: k8s.io/api/core/v1
          alias: corev1
        - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1
          alias: apiextensionsv1
        - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
          alias: metav1
        - pkg: k8s.io/apimachinery/pkg/api/errors
          alias: apierrors
        - pkg: k8s.io/apimachinery/pkg/util/errors
          alias: kerrors
        - pkg: k8s.io/component-base/logs/api/v1
          alias: logsv1
        # Controller Runtime
        - pkg: sigs.k8s.io/controller-runtime
          alias: ctrl
        # KCP
        - pkg: sigs.k8s.io/cluster-api/api/controlplane/kubeadm/v1beta2
          alias: controlplanev1
        # CAPI
        - pkg: sigs.k8s.io/cluster-api/api/core/v1beta2
          alias: clusterv1
        - pkg: sigs.k8s.io/cluster-api/api/core/v1beta1
          alias: clusterv1beta1
        - pkg: sigs.k8s.io/cluster-api/util/deprecated/v1beta1/conditions
          alias: v1beta1conditions
        - pkg: sigs.k8s.io/cluster-api/util/deprecated/v1beta1/conditions/v1beta2
          alias: v1beta2conditions
        - pkg: sigs.k8s.io/cluster-api/util/conditions/deprecated/v1beta1
          alias: deprecatedv1beta1conditions
        - pkg: sigs.k8s.io/cluster-api/util/deprecated/v1beta1/patch
          alias: v1beta1patch
        # CAPM3
        - pkg: github.com/metal3-io/cluster-api-provider-metal3/api/v1beta1
          alias: infrav1
        # BMO
        - pkg: github.com/metal3-io/baremetal-operator/apis/metal3.io/v1alpha1
          alias: bmov1alpha1
      no-unaliased: true
    nolintlint:
      require-specific: true
      allow-unused: false
    tagliatelle:
      case:
        rules:
          json: goCamel
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - gosec
        path: test/e2e
      - linters:
          - mnd
        path: e2e
      - linters:
          - dupl
          - goconst
          - mnd
          - unparam
          - unused
        path: _test\.go
      # Specific exclude rules for deprecated fields that are still part of the codebase.
      # These should be removed as the referenced deprecated item is removed from the project.
      - linters:
          - staticcheck
        text: 'SA1019:'
      # Disable linters for conversion
      - linters:
          - staticcheck
        path: .*(api|types)\/.*\/conversion.*\.go$
        text: 'SA1019:'
      # Dot imports for gomega or ginkgo are allowed 
      # within test files.
      - path: _test\.go
        text: should not use dot imports
      - path: (test|e2e)/.*.go
        text: should not use dot imports
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/api/core/v1beta1" is deprecated: This package is deprecated and is going to be removed when support for v1beta1 will be dropped.'
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/api/ipam/v1beta1" is deprecated: This package is deprecated and is going to be removed when support for v1beta1 will be dropped.'
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/util/deprecated/v1beta1/.*" is deprecated'
      - linters:
          - revive
        text: 'exported: exported method .*\.(Reconcile|SetupWithManager|SetupWebhookWithManager) should have comment or be unexported'
      # Exclude some packages or code to require comments, for example test code, or fake clients.
      - linters:
          - revive
        text: exported (method|function|type|const) (.+) should have comment or be unexported
        source: (func|type).*Fake.*
      - linters:
          - revive
        path: fake_\.go
        text: exported (method|function|type|const) (.+) should have comment or be unexported
      - linters:
          - revive
        path: .*(api|types)\/.*\/conversion.*\.go$
        text: exported (method|function|type|const) (.+) should have comment or be unexported
      - linters:
          - revive
        path: .*(api|types)\/.*\/conversion.*\.go$
        text: 'var-naming: don''t use underscores in Go names;'
      - linters:
          - revive
        path: .*(api|types)\/.*\/conversion.*\.go$
        text: 'receiver-naming: receiver name'
      - linters:
          - staticcheck
        path: .*(api|types)\/.*\/conversion.*\.go$
        text: 'ST1003: should not use underscores in Go names;'
      - linters:
          - staticcheck
        path: .*(api|types)\/.*\/conversion.*\.go$
        text: 'ST1016: methods on the same type should have the same receiver name'
      - linters:
          - tagliatelle
        text: DHCP|SLAAC
      - linters:
          - staticcheck
        text: 'QF1001: could apply De Morgan''s law'
      - linters:
          - staticcheck
        text: 'QF1008: could remove embedded field .* from selector'
      - linters:
          - staticcheck
        text: 'QF1003: could use tagged switch'
      - linters:
          - staticcheck
        text: 'QF1004: could use strings.ReplaceAll instead'
    paths:
      - zz_generated.*\.go$
      - .*conversion.*\.go$
      - mock*
issues:
  # Legacy (v1): `issues.include` is deprecated in v2; original config kept for reference:
  #   include:
  #     - EXC0002 # include "missing comments" issues from golangci-lint
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gci
    - gofmt
  exclusions:
    generated: lax
    paths:
      - zz_generated.*\.go$
      - .*conversion.*\.go$
      - mock*
